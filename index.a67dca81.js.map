{"mappings":"AAAA,MAGMA,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAChCE,EAAeH,SAASC,cAAc,UACtCG,EAAUJ,SAASC,cAAc,aAkBhC,SAASI,IAEd,OADAH,EAAOI,UAAUC,IAAI,cACdC,MAnBG,sCAmBQ,CAChBC,QAAS,CACP,YA3BJ,2EA6BGC,MAAKC,GACCA,EAASC,Q,CAfpBP,IACGK,MAkBH,SAAgBG,GAEd,MAAMC,EADND,EAAOA,EAAKE,QAAOC,I,IAAOC,EAAA,OAAkB,OAAT,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWE,IAAW,IAGhD,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAaO,OAAQD,GAAK,EAAG,CAC/C,MAAME,EAAQR,EAAaM,GAC3B,IAAIG,EAASvB,SAASwB,cAAc,UAE/BF,EAAMJ,QAEXK,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3BL,EAAOjB,UAAUC,IAAI,gBACrBR,EAAY8B,OAAON,GACnBrB,EAAOI,UAAUwB,OAAO,cACxB/B,EAAYO,UAAUC,IAAI,c,KAhC3BwB,OAAMC,IACL9B,EAAOI,UAAUwB,OAAO,cACxB3B,EAAaG,UAAUC,IAAI,aAAa,IAuC5C,IAwCI0B,EACAC,EAzCAC,EAAO,EA6CX,SAASC,EAAYvB,GAEnBA,EAAOA,EAAKwB,KAAIC,IAEd,MAAMC,EAAWD,EACjBL,EAAQjC,SAASwB,cAAc,OAC/BS,EAAMO,IAAM,GAAGD,EAASpB,MACxBc,EAAM3B,UAAUC,IAAI,aACpBH,EAAQyB,OAAOI,GAEf,MAAMQ,EAASF,EAASE,OACxB,IAAK,MAAMnB,KAASmB,EAAQ,CAC1BP,EAAUlC,SAASwB,cAAc,OACjCU,EAAQ5B,UAAUC,IAAI,YACtBH,EAAQyB,OAAOK,GAEf,MAAMN,EAAO5B,SAASwB,cAAc,MACpCI,EAAKD,YAAc,GAAGL,EAAMM,OAC5BA,EAAKtB,UAAUC,IAAI,YACnB2B,EAAQL,OAAOD,GAEf,MAAMc,EAAQ1C,SAASwB,cAAc,KACrCkB,EAAMf,YAAc,GAAGL,EAAMqB,cAC7BD,EAAMpC,UAAUC,IAAI,aACpB2B,EAAQL,OAAOa,GAEf,MAAME,EAAS5C,SAASwB,cAAc,KACtCoB,EAAOjB,YAAc,GAAGL,EAAMuB,cAC9BD,EAAOtC,UAAUC,IAAI,cACrB2B,EAAQL,OAAOe,GAEhB,MAAME,EAAe9C,SAASwB,cAAc,QAC3CsB,EAAanB,YAAc,gBAC3BmB,EAAaxC,UAAUC,IAAI,iBAC3BqC,EAAOG,QAAQD,GACf5C,EAAOI,UAAUwB,OAAO,a,KA/E9B/B,EAAYiD,iBAAiB,UAE7B,SAAkBV,GAChBpC,EAAOI,UAAUC,IAAI,cAErB,MACM0C,EADSX,EAAEY,cACazB,MAE9BU,GAAO,EAiBF,SAAyBgB,GAE9B,OAAO3C,MACL,mDAAmD2B,eAAkBgB,IACrE,CACE1C,QAAS,CACP,YA1FN,2EA6FEC,MAAKC,GACEA,EAASC,Q,CAzBlBwC,CAAgBH,GACbvC,KAAK0B,GACLL,OAAMC,IACL9B,EAAOI,UAAUwB,OAAO,cACxB/B,EAAYO,UAAUwB,OAAO,cAC/B3B,EAAaG,UAAUC,IAAI,aAAa,IAGtC4B,EAAO,IACTF,EAAMH,SACNI,EAAQJ,S,ICzEZzB","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const api_key =\n  'live_GOFdgZB1U3JaUt0QpXDdap3KE83KKlNjTSJr7mVB5lNxfONfeVEGI5Jzbqte4Tjx';\n\nconst selectField = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader')\nconst errorMessage = document.querySelector('.error')\nconst catInfo = document.querySelector('.cat-info');\nconst url = 'https://api.thecatapi.com/v1/breeds';\n\n/**\n  |============================\n  | ч. 1 - наповнення селекту\n  |============================\n*/\n\n\nfetchBreeds()\n  .then(render)\n  .catch(error => {\n    loader.classList.remove('is-visible')\n    errorMessage.classList.add('is-visible')\n    \n  });\n\nexport function fetchBreeds() {\n  loader.classList.add('is-visible')\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  }).then(response => {\n    return response.json();\n  })\n}\n\nfunction render(data) {\n  data = data.filter(img => img.image?.url != null);\n  const storedBreeds = data;\n\n  for (let i = 0; i < storedBreeds.length; i += 1) {\n    const breed = storedBreeds[i];\n    let option = document.createElement('option');\n\n    if (!breed.image) continue;\n\n    option.value = breed.id;\n    option.textContent = breed.name;\n    option.classList.add('option-breed');\n    selectField.append(option);\n    loader.classList.remove('is-visible')\n    selectField.classList.add('is-visible')\n  }\n}\n\n/**\n  |============================\n  | ч.2 - fetch на change по конкретній породі\n  |============================\n*/ \nlet page = 1\nselectField.addEventListener('change', onChange);\n\nfunction onChange(e) {\n  loader.classList.add('is-visible')\n   \n  const option = e.currentTarget;\n  const selectedOption = option.value;\n  \n  page +=1\n\n  fetchCatByBreed(selectedOption)\n    .then(renderBreed)\n    .catch(error => {\n      loader.classList.remove('is-visible')\n      selectField.classList.remove('is-visible')\n    errorMessage.classList.add('is-visible')\n    });\n   \n  if (page > 2) {\n    image.remove()\n    catText.remove()\n  }\n  \n}\n\nexport function fetchCatByBreed(breedId) {\n  \n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?page=${page}&breed_ids=${breedId}`,\n    {\n      headers: {\n        'x-api-key': api_key,\n      },\n    }\n  ).then(response => {\n    return response.json();\n  });\n}\n\nlet image\nlet catText\n\n\n\nfunction renderBreed(data) {\n\n  data = data.map(e => {\n\n    const catImage = e;\n    image = document.createElement('img');\n    image.src = `${catImage.url}`;\n    image.classList.add('cat-image');\n    catInfo.append(image);\n\n    const breeds = catImage.breeds;\n    for (const breed of breeds) {\n      catText = document.createElement('div')\n      catText.classList.add('cat-text')\n      catInfo.append(catText)\n\n      const name = document.createElement('h1');\n      name.textContent = `${breed.name}`;\n      name.classList.add('cat-name');\n      catText.append(name);\n\n      const descr = document.createElement('p');\n      descr.textContent = `${breed.description}`;\n      descr.classList.add('cat-descr');\n      catText.append(descr);\n\n      const temper = document.createElement('p');\n      temper.textContent = `${breed.temperament}`;\n      temper.classList.add('cat-temper');\n      catText.append(temper);\n      \n     const temperHeader = document.createElement('span')\n      temperHeader.textContent = 'Temperament: '\n      temperHeader.classList.add('temper-header')\n      temper.prepend(temperHeader)\n      loader.classList.remove('is-visible')\n    }\n  \n  });\n \n}\n\n\n","import axios from \"axios\";\n// axios.defaults.headers.common[\"x-api-key\"] = \"live_UvDgDUIngSta9lKqkpFib1CXVg8uWmV2uPCEslc7RNSyO9JtebuROI2VuCjBfzSA\";\n\n\nimport { fetchBreeds } from \"./cat-api\";\n\n// import { fetchCatByBreed } from \"./cat-api\";\nfetchBreeds()\n\n\n// fetchCatByBreed()\n"],"names":["$6b5f202d1456c0af$var$selectField","document","querySelector","$6b5f202d1456c0af$var$loader","$6b5f202d1456c0af$var$errorMessage","$6b5f202d1456c0af$var$catInfo","$6b5f202d1456c0af$export$913382e0b15b5503","classList","add","fetch","headers","then","response","json","data","storedBreeds","filter","img","ref","image","url","i","length","breed","option","createElement","value","id","textContent","name","append","remove","catch","error","$6b5f202d1456c0af$var$image","$6b5f202d1456c0af$var$catText","$6b5f202d1456c0af$var$page","$6b5f202d1456c0af$var$renderBreed","map","e","catImage","src","breeds","descr","description","temper","temperament","temperHeader","prepend","addEventListener","selectedOption","currentTarget","breedId","$6b5f202d1456c0af$export$57b7d3a597416aa2"],"version":3,"file":"index.a67dca81.js.map"}