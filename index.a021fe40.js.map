{"mappings":"YAAA,IAAMA,EACJ,wEACIC,EAAcC,SAASC,cAAc,iBACrCC,EAAUF,SAASC,cAAc,aAchC,SAASE,IACd,OAAOC,MAdG,sCAcQ,CAChBC,QAAS,CACP,YAAaP,KAEdQ,MAAK,SAAAC,GACN,OAAOA,EAASC,M,IAoDpB,SAASC,EAAYC,GACnBC,QAAQC,IAAIF,GACZA,EAAOA,EAAKG,KAAI,SAAAC,GACd,IAAMC,EAAWD,EACXE,EAAQhB,SAASiB,cAAc,OACrCD,EAAME,IAAM,GAAgBC,OAAbJ,EAASK,KACxBJ,EAAMK,UAAUC,IAAI,aACpBpB,EAAQqB,OAAOP,GAEf,IAAMQ,EAAST,EAASS,OACnBC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeN,EAAMO,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,EAAY,CAAvB,IAAMU,EAANN,EAAWO,MACRC,EAAOrC,SAASiB,cAAc,MACpCoB,EAAKC,YAAc,GAAcnB,OAAXgB,EAAME,MAC5BA,EAAKhB,UAAUC,IAAI,YACnBpB,EAAQqB,OAAOc,GAEf,IAAME,EAAQvC,SAASiB,cAAc,KACrCsB,EAAMD,YAAc,GAAqBnB,OAAlBgB,EAAMK,aAC7BD,EAAMlB,UAAUC,IAAI,aACpBpB,EAAQqB,OAAOgB,GAEf,IAAME,EAASzC,SAASiB,cAAc,KACtCwB,EAAOH,YAAc,GAAqBnB,OAAlBgB,EAAMO,aAC9BD,EAAOpB,UAAUC,IAAI,cACrBpB,EAAQqB,OAAOkB,E,WAdZf,GAAW,EAAXC,EAAWgB,C,aAAXlB,GAAW,MAAXK,EAAWc,QAAXd,EAAWc,Q,YAAXlB,E,MAAAC,C,MA1ETxB,IACGG,MAeH,SAAgBI,GAId,IAFA,IAAMmC,EADNnC,EAAOA,EAAKoC,QAAO,SAAAC,G,IAAOC,EAAA,OAAkB,OAAT,QAATA,EAAAD,EAAI/B,aAAK,IAATgC,OAAA,EAAAA,EAAW5B,I,IAG5B6B,EAAI,EAAGA,EAAIJ,EAAaK,OAAQD,GAAK,EAAG,CAC/C,IAAMd,EAAQU,EAAaI,GACvBE,EAASnD,SAASiB,cAAc,UAE/BkB,EAAMnB,QAEXmC,EAAOf,MAAQD,EAAMiB,GACrBD,EAAOb,YAAcH,EAAME,KAC3Bc,EAAO9B,UAAUC,IAAI,gBACrBvB,EAAYwB,OAAO4B,G,KA3BpBE,OAAM,SAAAC,GACL3C,QAAQC,IAAI0C,E,IAmChBvD,EAAYwD,iBAAiB,UAE7B,SAAkBzC,IAWc0C,EAVf1C,EAAE2C,cACarB,MAUvBhC,MACL,wDAAgEe,OAARqC,GACxD,CACEnD,QAAS,CACP,YAAaP,KAGjBQ,MAAK,SAAAC,GACL,OAAOA,EAASC,M,KAffF,KAAKG,GACL4C,OAAM,SAAAC,GACL3C,QAAQC,IAAI0C,E,IAIX,IAAyBE,C,ICxDhCrD,G","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const api_key =\n  'live_GOFdgZB1U3JaUt0QpXDdap3KE83KKlNjTSJr7mVB5lNxfONfeVEGI5Jzbqte4Tjx';\nconst selectField = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst url = 'https://api.thecatapi.com/v1/breeds';\n\n/**\n  |============================\n  | ч. 1 - наповнення селекту\n  |============================\n*/\nfetchBreeds()\n  .then(render)\n  .catch(error => {\n    console.log(error);\n  });\n\nexport function fetchBreeds() {\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  }).then(response => {\n    return response.json();\n  });\n}\n\nfunction render(data) {\n  data = data.filter(img => img.image?.url != null);\n  const storedBreeds = data;\n\n  for (let i = 0; i < storedBreeds.length; i += 1) {\n    const breed = storedBreeds[i];\n    let option = document.createElement('option');\n\n    if (!breed.image) continue;\n\n    option.value = breed.id;\n    option.textContent = breed.name;\n    option.classList.add('option-breed');\n    selectField.append(option);\n  }\n}\n\n/**\n  |============================\n  | ч.2 - fetch на change по конкретній породі\n  |============================\n*/\nselectField.addEventListener('change', onChange);\n\nfunction onChange(e) {\n  const option = e.currentTarget;\n  const selectedOption = option.value;\n\n  fetchCatByBreed(selectedOption)\n    .then(renderBreed)\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nexport function fetchCatByBreed(breedId) {\n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`,\n    {\n      headers: {\n        'x-api-key': api_key,\n      },\n    }\n  ).then(response => {\n    return response.json();\n  });\n}\n\nfunction renderBreed(data) {\n  console.log(data);\n  data = data.map(e => {\n    const catImage = e;\n    const image = document.createElement('img');\n    image.src = `${catImage.url}`;\n    image.classList.add('cat-image');\n    catInfo.append(image);\n\n    const breeds = catImage.breeds;\n    for (const breed of breeds) {\n      const name = document.createElement('h1');\n      name.textContent = `${breed.name}`;\n      name.classList.add('cat-name');\n      catInfo.append(name);\n\n      const descr = document.createElement('p');\n      descr.textContent = `${breed.description}`;\n      descr.classList.add('cat-descr');\n      catInfo.append(descr);\n\n      const temper = document.createElement('p');\n      temper.textContent = `${breed.temperament}`;\n      temper.classList.add('cat-temper');\n      catInfo.append(temper);\n    }\n  });\n}\n\n","import axios from \"axios\";\n// axios.defaults.headers.common[\"x-api-key\"] = \"live_UvDgDUIngSta9lKqkpFib1CXVg8uWmV2uPCEslc7RNSyO9JtebuROI2VuCjBfzSA\";\n\nimport { fetchBreeds } from \"./cat-api\";\n\n// import { fetchCatByBreed } from \"./cat-api\";\nfetchBreeds()\n\n\n// fetchCatByBreed()\n"],"names":["$ae0c329fb0fb36dc$var$api_key","$ae0c329fb0fb36dc$var$selectField","document","querySelector","$ae0c329fb0fb36dc$var$catInfo","$ae0c329fb0fb36dc$export$913382e0b15b5503","fetch","headers","then","response","json","$ae0c329fb0fb36dc$var$renderBreed","data","console","log","map","e","catImage","image","createElement","src","concat","url","classList","add","append","breeds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","breed","value","name","textContent","descr","description","temper","temperament","err","return","storedBreeds","filter","img","ref","i","length","option","id","catch","error","addEventListener","breedId","currentTarget"],"version":3,"file":"index.a021fe40.js.map"}